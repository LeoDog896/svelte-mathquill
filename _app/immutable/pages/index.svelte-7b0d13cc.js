import{S as ge,i as ve,s as qe,e as u,t as h,c as i,a as A,h as d,d as v,g as Ne,H as n,j as Ce,n as ie,w as Ae,E as Se,M as ne,N as pe,k as te,x as fe,m as ae,y as ce,b,z as he,O as E,P as U,Q as de,r as me,p as _e,C as be,R as $e}from"../chunks/index-11b9fab4.js";import{M as ke}from"../chunks/MathQuill-755feaf1.js";function Be(a){let e,s;return{c(){e=u("span"),s=h(a[0])},l(r){e=i(r,"SPAN",{});var o=A(e);s=d(o,a[0]),o.forEach(v)},m(r,o){Ne(r,e,o),n(e,s),a[2](e)},p(r,[o]){o&1&&Ce(s,r[0])},i:ie,o:ie,d(r){r&&v(e),a[2](null)}}}function Ee(a,e,s){let r,o,p,{latex:f=""}=e;Ae(()=>{o=globalThis.MathQuill.getInterface(2),f&&c()});function c(){if(f==""){p==null||p.revert();return}p&&p.revert(),p=o==null?void 0:o.StaticMath(r)}function g(_){ne[_?"unshift":"push"](()=>{r=_,s(1,r)})}return a.$$set=_=>{"latex"in _&&s(0,f=_.latex)},a.$$.update=()=>{a.$$.dirty&1&&f!==void 0&&Se().then(c)},[f,r,g]}class Re extends ge{constructor(e){super(),ve(this,e,Ee,Be,qe,{latex:0})}}function Ie(a){let e,s,r,o,p,f,c,g,_,R,m,I,M,S,y,N,D,L,C,H,j,$,z,V,Q,F,G,O,J,K,P,W,k,X,B,le="<MathQuill config={({ autoCommands, autoOperatorNames })} bind:latex={latex}/><br/>",Y,w,Z,se;function Oe(l){a[5](l)}function Pe(l){a[6](l)}let x={config:{autoCommands:a[1],autoOperatorNames:a[2]},noBorderOutline:a[3]};return a[4]!==void 0&&(x.focused=a[4]),a[0]!==void 0&&(x.latex=a[0]),m=new ke({props:x}),ne.push(()=>pe(m,"focused",Oe)),ne.push(()=>pe(m,"latex",Pe)),O=new Re({props:{latex:a[0]}}),{c(){e=u("div"),s=u("h1"),r=h("svelte-mathquill "),o=u("span"),p=h("mathquill wrapper for svelte"),f=te(),c=u("p"),g=u("span"),_=h("npm i -D svelte-mathquill"),R=te(),fe(m.$$.fragment),S=u("br"),y=h(`

  Auto Commands: `),N=u("input"),D=u("br"),L=h(`
  Auto Operator Names: `),C=u("input"),H=u("br"),j=h(`
  No outline / border: `),$=u("input"),z=u("br"),V=h(`
  Is focused: `),Q=h(a[4]),F=u("br"),G=h(`
  Static: `),fe(O.$$.fragment),J=u("br"),K=h(`
  Latex: `),P=u("input"),W=te(),k=u("p"),X=h("Code: "),B=u("span"),Y=h(le),this.h()},l(l){e=i(l,"DIV",{class:!0});var t=A(e);s=i(t,"H1",{class:!0});var q=A(s);r=d(q,"svelte-mathquill "),o=i(q,"SPAN",{class:!0});var T=A(o);p=d(T,"mathquill wrapper for svelte"),T.forEach(v),q.forEach(v),f=ae(t),c=i(t,"P",{class:!0});var re=A(c);g=i(re,"SPAN",{class:!0});var oe=A(g);_=d(oe,"npm i -D svelte-mathquill"),oe.forEach(v),re.forEach(v),R=ae(t),ce(m.$$.fragment,t),S=i(t,"BR",{}),y=d(t,`

  Auto Commands: `),N=i(t,"INPUT",{placeholder:!0}),D=i(t,"BR",{}),L=d(t,`
  Auto Operator Names: `),C=i(t,"INPUT",{placeholder:!0}),H=i(t,"BR",{}),j=d(t,`
  No outline / border: `),$=i(t,"INPUT",{type:!0}),z=i(t,"BR",{}),V=d(t,`
  Is focused: `),Q=d(t,a[4]),F=i(t,"BR",{}),G=d(t,`
  Static: `),ce(O.$$.fragment,t),J=i(t,"BR",{}),K=d(t,`
  Latex: `),P=i(t,"INPUT",{placeholder:!0}),W=ae(t),k=i(t,"P",{class:!0});var ee=A(k);X=d(ee,"Code: "),B=i(ee,"SPAN",{class:!0});var ue=A(B);Y=d(ue,le),ue.forEach(v),ee.forEach(v),t.forEach(v),this.h()},h(){b(o,"class","text-xl text-gray-600"),b(s,"class","my-6 text-3xl p-3 border-b border-black border-dashed"),b(g,"class","rounded-lg font-mono bg-gray-200 p-2"),b(c,"class","mb-4"),b(N,"placeholder","Auto Commands"),b(C,"placeholder","Auto Operator Names"),b($,"type","checkbox"),b(P,"placeholder","Result (editable) Latex"),b(B,"class","font-mono rounded-lg bg-gray-200 p-2"),b(k,"class","py-4"),b(e,"class","p-8 w-full h-full")},m(l,t){Ne(l,e,t),n(e,s),n(s,r),n(s,o),n(o,p),n(e,f),n(e,c),n(c,g),n(g,_),n(e,R),he(m,e,null),n(e,S),n(e,y),n(e,N),E(N,a[1]),n(e,D),n(e,L),n(e,C),E(C,a[2]),n(e,H),n(e,j),n(e,$),$.checked=a[3],n(e,z),n(e,V),n(e,Q),n(e,F),n(e,G),he(O,e,null),n(e,J),n(e,K),n(e,P),E(P,a[0]),n(e,W),n(e,k),n(k,X),n(k,B),n(B,Y),w=!0,Z||(se=[U(N,"input",a[7]),U(C,"input",a[8]),U($,"change",a[9]),U(P,"input",a[10])],Z=!0)},p(l,[t]){const q={};t&6&&(q.config={autoCommands:l[1],autoOperatorNames:l[2]}),t&8&&(q.noBorderOutline=l[3]),!I&&t&16&&(I=!0,q.focused=l[4],de(()=>I=!1)),!M&&t&1&&(M=!0,q.latex=l[0],de(()=>M=!1)),m.$set(q),t&2&&N.value!==l[1]&&E(N,l[1]),t&4&&C.value!==l[2]&&E(C,l[2]),t&8&&($.checked=l[3]),(!w||t&16)&&Ce(Q,l[4]);const T={};t&1&&(T.latex=l[0]),O.$set(T),t&1&&P.value!==l[0]&&E(P,l[0])},i(l){w||(me(m.$$.fragment,l),me(O.$$.fragment,l),w=!0)},o(l){_e(m.$$.fragment,l),_e(O.$$.fragment,l),w=!1},d(l){l&&v(e),be(m),be(O),Z=!1,$e(se)}}}function Me(a,e,s){let r="x + \\sqrt{5}",o="pi theta sqrt sum",p="sin cos tan arcsin arccos arctan",f=!1,c=!1;function g(S){c=S,s(4,c)}function _(S){r=S,s(0,r)}function R(){o=this.value,s(1,o)}function m(){p=this.value,s(2,p)}function I(){f=this.checked,s(3,f)}function M(){r=this.value,s(0,r)}return[r,o,p,f,c,g,_,R,m,I,M]}class Qe extends ge{constructor(e){super(),ve(this,e,Me,Ie,qe,{})}}export{Qe as default};
